<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dreampickMusic="clr-namespace:dreampick_music">
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
    </Style>

    <Style x:Key="Input" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource H2}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
    </Style>

    <Style x:Key="LabelNonStyled" TargetType="Label">
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
    </Style>


    <Style x:Key="ValidationText" TargetType="Label">
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
        <Setter Property="Foreground" Value="Firebrick"></Setter>

        <Style.Triggers>
            <DataTrigger>

            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Name="DrButton" TargetType="Border" x:Key="DragButton">
        <Setter Property="Height" Value="10"></Setter>
        <Setter Property="Width" Value="150"></Setter>
        <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>

    </Style>
    <Style x:Name="DrButton" TargetType="Border" x:Key="CloseDragButton">
        <Setter Property="Height" Value="10"></Setter>
        <Setter Property="Width" Value="30"></Setter>
        <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="Margin" Value="10,0,0,0"></Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CloseBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="Background" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="Margin" Value="{DynamicResource LeftLayoutPaddingInner}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>

    </Style>

    <Style TargetType="Label" x:Key="H1">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>

        <Setter Property="FontSize" Value="{DynamicResource Header1}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource HeaderWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>

    </Style>
    <Style TargetType="Label" x:Key="Name">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>

        <Setter Property="FontSize" Value="{DynamicResource Header1}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource HeaderWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource TitleFont}"></Setter>

    </Style>
    <Style TargetType="Label" x:Key="H2">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>

        <Setter Property="FontSize" Value="{DynamicResource Header2}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource HeaderWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>

    </Style>
    <Style x:Key="RoundedBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="25"></Setter>
    </Style>

    <Style x:Key="ForeButton" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource DarkenForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="MinWidth" Value="120"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight }"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border CornerRadius="5" Padding="{DynamicResource Padding}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--TODO animations-->
                <Setter Property="Background" Value="{DynamicResource ThirdBrush}"></Setter>

            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
                <Setter Property="Background" Value="{DynamicResource ThirdBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Thumb">
        <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
    </Style>
    <Style TargetType="ScrollBar">
        <Style.Resources>

        </Style.Resources>
        <Setter Property="Width" Value="1"></Setter>
        <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
        <Setter Property="Margin" Value="10,0,0,0"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SecondBrush}"></Setter>
    </Style>


    <Style x:Key="ControlButton" TargetType="Button">

        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="MinWidth" Value="40"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="7" Padding="{DynamicResource Padding}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThirdBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="BorderRoot" TargetType="Border">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Visibility" Value="Visible"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>

                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="100" Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:30.500">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StackRootVisible" TargetType="StackPanel">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Visibility" Value="Visible"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>

                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="100" Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:30.500">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="WindowBorder" TargetType="Border">

    </Style>


    <Style x:Key="StackRoot" TargetType="StackPanel">
        <Style.Triggers>
            <EventTrigger RoutedEvent="StackPanel.Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="100" Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:30.500">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxTransparent" TargetType="TextBox">
        <Setter Property="Padding" Value="{DynamicResource Padding}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>

        <Setter Property="CaretBrush" Value="{DynamicResource ForeBrush}"></Setter>

        <Setter Property="FontSize" Value="{DynamicResource Header2}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource TitleFont}"></Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Text" Value=""></Condition>
                    <Condition Property="IsFocused" Value="False"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource ThirdBrush}"></Setter>
                    <Setter Property="Background" Value="{DynamicResource BackBrush}"></Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ChoiceView" TargetType="ListView">


        <Style.Resources>
            <Style TargetType="ListViewItem">

                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Transparent" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border CornerRadius="5" SnapsToDevicePixels="True"
                                    BorderThickness="0"
                                    BorderBrush="Transparent"
                                    Padding="{DynamicResource PaddingInner}"
                                    Background="{TemplateBinding Background}">
                                <Border Name="InnerBorder" CornerRadius="0" BorderThickness="0">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch"></ContentPresenter>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>

                                <!--<EventTrigger RoutedEvent="ListViewItem.MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.025"
                                                                Storyboard.TargetProperty="(ListViewItem.Background).(SolidColorBrush.Color)"
                                                                By="{StaticResource HightlightColor}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                
                                <EventTrigger RoutedEvent="ListViewItem.MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.025"
                                                                Storyboard.TargetProperty="(ListViewItem.Background).(SolidColorBrush.Color)"
                                                                To="Transparent" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>-->


                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ThirdBrush}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ThirdBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>


        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>


    <Style x:Key="PostView" TargetType="ListView">


        <Style.Resources>
            <Style TargetType="ListViewItem">

                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Transparent" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border CornerRadius="5" SnapsToDevicePixels="True"
                                    BorderThickness="0"
                                    BorderBrush="Transparent"
                                    Padding="{DynamicResource PaddingInner}"
                                    Background="{TemplateBinding Background}">
                                <Border Name="InnerBorder" CornerRadius="0" BorderThickness="0">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch"></ContentPresenter>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>


        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>


    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Width" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse
                        Name="Ellipse"
                         >
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{DynamicResource ForeColor}" Opacity="0.5"></SolidColorBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill"  >
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ForeColor}" Opacity="0.8"></SolidColorBrush>

                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Ellipse" Property="Fill" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VolumeThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse
                        Name="Ellipse"
                        Fill="{DynamicResource SecondBrush}"
                        Stroke="Transparent"
                        StrokeThickness="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Border CornerRadius="8">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    Name="TopTick"
                    SnapsToDevicePixels="True"
                    Placement="Top"
                    Fill="{DynamicResource BackBrush}"
                    Height="0"
                    Visibility="Collapsed" />
                <Border
                    Name="TrackBackground"
                    Margin="0"
                    CornerRadius="8"
                    Height="16"
                    Grid.Row="1"
                    Background="{DynamicResource BackBrush}"
                    BorderThickness="0" />
                <Canvas Margin="-8,0,-16,-6" VerticalAlignment="Center">
                    <Border  BorderBrush="{DynamicResource ThirdBrush}" CornerRadius="8"
                            x:Name="PART_SelectionRange" HorizontalAlignment="Left" Height="16"
                             >
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ForeColor}" Opacity="0.5"></SolidColorBrush>
                        </Border.Background>
                    </Border>
                </Canvas>
                <Track Grid.Row="1" Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Style="{StaticResource SliderButtonStyle}"
                            Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Style="{StaticResource SliderButtonStyle}"
                            Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar
                    Name="BottomTick"
                    SnapsToDevicePixels="True"
                    Grid.Row="2"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Bottom"
                    Height="0"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar
                Name="TopTick"
                SnapsToDevicePixels="True"
                Placement="Left"
                Fill="{DynamicResource BackBrush}"
                Width="10"
                Visibility="Collapsed" />
            <Border
                Name="TrackBackground"
                Margin="0"
                CornerRadius="2"
                Width="34"
                Grid.Column="1"
                Background="{DynamicResource ThirdBrush}"
                BorderBrush="{DynamicResource ForeBrush}"
                BorderThickness="0" />
            <Track Grid.Column="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Width="34" Height="34" Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar
                Name="BottomTick"
                SnapsToDevicePixels="True"
                Grid.Column="2"
                Fill="{TemplateBinding Foreground}"
                Placement="Right"
                Width="4"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VolumeSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar
                Name="TopTick"
                SnapsToDevicePixels="True"
                Placement="Left"
                Fill="{DynamicResource BackBrush}"
                Width="10"
                Visibility="Collapsed" />
            <Canvas Margin="-8,0,-16,-6">
                <Border CornerRadius="8" x:Name="PART_SelectionRange" Width="24"
                        Background="{DynamicResource ForeBrush}" />
            </Canvas>
            <Border
                Name="TrackBackground"
                Margin="0"
                CornerRadius="2"
                Width="24"
                Grid.Column="1"
                Background="{DynamicResource ThirdBrush}"
                BorderBrush="{DynamicResource ThirdBrush}"
                BorderThickness="1" />
            <Track Grid.Column="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <!--<Track.Thumb>
          <Thumb Style="{StaticResource VolumeThumbStyle}" />
        </Track.Thumb>-->
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar
                Name="BottomTick"
                SnapsToDevicePixels="True"
                Grid.Column="2"
                Fill="{TemplateBinding Foreground}"
                Placement="Right"
                Width="4"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="34" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>

        </Style.Triggers>
    </Style>


</ResourceDictionary>