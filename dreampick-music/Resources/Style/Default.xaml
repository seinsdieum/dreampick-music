<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dreampickMusic="clr-namespace:dreampick_music">
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
    </Style>
    
    <Style x:Key="LinkedP" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <Style x:Key="P" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
    </Style>
    <Style x:Key="PWrap" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
    </Style>
    
    <!--<Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
    </Style>-->
    
    <Style x:Key="InvalidParagraph" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource CloseBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
    </Style>

    <Style x:Key="Input" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource H2}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
    </Style>

    <Style x:Key="LabelNonStyled" TargetType="Label">
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
    </Style>


    <Style x:Key="ValidationText" TargetType="Label">
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
        <Setter Property="Foreground" Value="Firebrick"></Setter>

        <Style.Triggers>
            <DataTrigger>

            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Name="DrButton" TargetType="Border" x:Key="DragButton">
        <Setter Property="Height" Value="10"></Setter>
        <Setter Property="Width" Value="150"></Setter>
        <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>

    </Style>
    <Style x:Name="DrButton" TargetType="Border" x:Key="CloseDragButton">
        <Setter Property="Height" Value="10"></Setter>
        <Setter Property="Width" Value="30"></Setter>
        <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="Margin" Value="10,0,0,0"></Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CloseBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="Background" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="Margin" Value="{DynamicResource LeftLayoutPaddingInner}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>

    </Style>

    <Style TargetType="Label" x:Key="H1">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>

        <Setter Property="FontSize" Value="{DynamicResource Header1}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource HeaderWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>

    </Style>
    <Style TargetType="Label" x:Key="Name">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>

        <Setter Property="FontSize" Value="{DynamicResource Header1}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource HeaderWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource TitleFont}"></Setter>

    </Style>
    <Style TargetType="Label" x:Key="H2">
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>

        <Setter Property="FontSize" Value="{DynamicResource Header2}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource HeaderWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>

    </Style>
    <Style x:Key="RoundedBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="25"></Setter>
    </Style>

    <Style x:Key="ForeButton" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource DarkenForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="MinWidth" Value="120"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight }"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border CornerRadius="5" Padding="{DynamicResource Padding}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThirdBrush}"></Setter>

            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
                <Setter Property="Background" Value="{DynamicResource ThirdBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="FieldToggleButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource ThirdBrush}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border Padding="10" Background="{TemplateBinding Background}" CornerRadius="{DynamicResource Radius}"></Border>
                        <ContentPresenter Margin="10" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False" >
                            <Setter Property="Background" Value="{DynamicResource ThirdBrush}"></Setter>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ControlButton" TargetType="Button">

        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="MinWidth" Value="40"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="7" Padding="{DynamicResource Padding}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThirdBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <Style TargetType="Button">

        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="{DynamicResource ThirdBrush}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{DynamicResource Radius}" Padding="{DynamicResource Padding}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackBrush}"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource DarkenForeBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BorderRoot" TargetType="Border">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Visibility" Value="Visible"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>

                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="100" Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:30.500">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StackRootVisible" TargetType="StackPanel">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Visibility" Value="Visible"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>

                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="100" Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:30.500">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="WindowBorder" TargetType="Border">

    </Style>


    <Style x:Key="StackRoot" TargetType="StackPanel">
        <Style.Triggers>
            <EventTrigger RoutedEvent="StackPanel.Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="100" Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:30.500">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    
    <Style x:Key="ThirdBorderRoot" TargetType="Border">
        
        
        <Setter Property="Background" Value="{DynamicResource ThirdBrush}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="100" Storyboard.TargetProperty="Background.Opacity"
                                             Duration="0:0:30.500">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
                <Setter Property="Label.Foreground" Value="{DynamicResource DarkenForeBrush}"></Setter>
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource DarkenForeBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <Style x:Key="SecondBorderRoot" TargetType="Border">
        
        <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="0" To="100" Storyboard.TargetProperty="Background.Opacity"
                                             Duration="0:0:30.500">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxTransparent" TargetType="TextBox">
        <Setter Property="Padding" Value="{DynamicResource Padding}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>

        <Setter Property="CaretBrush" Value="{DynamicResource ForeBrush}"></Setter>

        <Setter Property="FontSize" Value="{DynamicResource Header2}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource TitleFont}"></Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
                    <Setter Property="Background" Value="Transparent"></Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
    <ControlTemplate x:Key="TextboxTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource Radius}"> 
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondBrush}"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondBrush}"></Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource ThirdBrush}"></Setter>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="25"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ThirdBrush}">
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="Padding" Value="{DynamicResource Padding}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
        <Setter Property="CaretBrush" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ThirdBrush}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template" Value="{StaticResource TextboxTemplate}">
           
        </Setter>
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="Background" Value="{DynamicResource ThirdBrush}">
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
        <Setter Property="Padding" Value="{DynamicResource Padding}"></Setter>
        <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
        <Setter Property="CaretBrush" Value="{DynamicResource ForeBrush}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource ThirdBrush}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template" >
           <Setter.Value>
               
               
               <ControlTemplate TargetType="PasswordBox">
                   <Border Background="{TemplateBinding Background}" 
                           x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                           BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource Radius}"> 
                       <ScrollViewer x:Name="PART_ContentHost"/>
                   </Border>
                   <ControlTemplate.Triggers>
                       <Trigger Property="IsFocused" Value="True">
                           <Setter Property="BorderBrush" Value="{DynamicResource SecondBrush}"></Setter>
                       </Trigger>
                       <Trigger Property="IsMouseOver" Value="True">
                           <Setter Property="BorderBrush" Value="{DynamicResource SecondBrush}"></Setter>
                       </Trigger>
                       <Trigger Property="IsFocused" Value="False">
                           <Setter Property="BorderBrush" Value="{DynamicResource ThirdBrush}"></Setter>
                       </Trigger>
                       <Trigger Property="Width" Value="Auto">
                           <Setter Property="MinWidth" Value="100"/>
                       </Trigger>
                       <Trigger Property="Height" Value="Auto">
                           <Setter Property="MinHeight" Value="25"/>
                       </Trigger>
                   </ControlTemplate.Triggers>
               </ControlTemplate>
               
           </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChoiceView" TargetType="ListView">


        <Style.Resources>
            <Style TargetType="ListViewItem">

                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Transparent" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border CornerRadius="{DynamicResource Radius}" SnapsToDevicePixels="True"
                                    BorderThickness="0"
                                    BorderBrush="Transparent"
                                    Padding="{DynamicResource PaddingInner}"
                                    Background="{TemplateBinding Background}">
                                <Border Name="InnerBorder" CornerRadius="0" BorderThickness="0">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch"></ContentPresenter>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>

                                <!--<EventTrigger RoutedEvent="ListViewItem.MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.025"
                                                                Storyboard.TargetProperty="(ListViewItem.Background).(SolidColorBrush.Color)"
                                                                By="{StaticResource HightlightColor}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                
                                <EventTrigger RoutedEvent="ListViewItem.MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.025"
                                                                Storyboard.TargetProperty="(ListViewItem.Background).(SolidColorBrush.Color)"
                                                                To="Transparent" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>-->


                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ThirdBrush}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ThirdBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>


        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>


    <Style x:Key="PostView" TargetType="ListView">


        <Style.Resources>
            <Style TargetType="ListViewItem">

                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Transparent" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border CornerRadius="{DynamicResource Radius}" SnapsToDevicePixels="True"
                                    BorderThickness="0"
                                    Margin="0,10,0,0"
                                    BorderBrush="Transparent"
                                    Background="{TemplateBinding Background}">
                                <Border Name="InnerBorder" CornerRadius="0" BorderThickness="0">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch"></ContentPresenter>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>


        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>


    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Width" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse
                        Name="Ellipse">
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{DynamicResource ForeColor}" Opacity="0.5"></SolidColorBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ForeColor}" Opacity="0.8"></SolidColorBrush>

                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Ellipse" Property="Fill" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VolumeThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse
                        Name="Ellipse"
                        Fill="{DynamicResource SecondBrush}"
                        Stroke="Transparent"
                        StrokeThickness="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Border CornerRadius="8">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    Name="TopTick"
                    SnapsToDevicePixels="True"
                    Placement="Top"
                    Fill="{DynamicResource BackBrush}"
                    Height="0"
                    Visibility="Collapsed" />
                <Border
                    Name="TrackBackground"
                    Margin="0"
                    CornerRadius="8"
                    Height="16"
                    Grid.Row="1"
                    Background="{DynamicResource BackBrush}"
                    BorderThickness="0" />
                <Canvas Margin="-8,0,-16,-6" VerticalAlignment="Center">
                    <Border BorderBrush="{DynamicResource ThirdBrush}" CornerRadius="8"
                            x:Name="PART_SelectionRange" HorizontalAlignment="Left" Height="16">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ForeColor}" Opacity="0.5"></SolidColorBrush>
                        </Border.Background>
                    </Border>
                </Canvas>
                <Track Grid.Row="1" Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Style="{StaticResource SliderButtonStyle}"
                            Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Style="{StaticResource SliderButtonStyle}"
                            Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar
                    Name="BottomTick"
                    SnapsToDevicePixels="True"
                    Grid.Row="2"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Bottom"
                    Height="0"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar
                Name="TopTick"
                SnapsToDevicePixels="True"
                Placement="Left"
                Fill="{DynamicResource BackBrush}"
                Width="10"
                Visibility="Collapsed" />
            <Border
                Name="TrackBackground"
                Margin="0"
                CornerRadius="2"
                Width="34"
                Grid.Column="1"
                Background="{DynamicResource ThirdBrush}"
                BorderBrush="{DynamicResource ForeBrush}"
                BorderThickness="0" />
            <Track Grid.Column="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Width="34" Height="34" Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar
                Name="BottomTick"
                SnapsToDevicePixels="True"
                Grid.Column="2"
                Fill="{TemplateBinding Foreground}"
                Placement="Right"
                Width="4"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VolumeSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar
                Name="TopTick"
                SnapsToDevicePixels="True"
                Placement="Left"
                Fill="{DynamicResource BackBrush}"
                Width="10"
                Visibility="Collapsed" />
            <Canvas Margin="-8,0,-16,-6">
                <Border CornerRadius="8" x:Name="PART_SelectionRange" Width="24"
                        Background="{DynamicResource ForeBrush}" />
            </Canvas>
            <Border
                Name="TrackBackground"
                Margin="0"
                CornerRadius="2"
                Width="24"
                Grid.Column="1"
                Background="{DynamicResource ThirdBrush}"
                BorderBrush="{DynamicResource ThirdBrush}"
                BorderThickness="1" />
            <Track Grid.Column="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <!--<Track.Thumb>
          <Thumb Style="{StaticResource VolumeThumbStyle}" />
        </Track.Thumb>-->
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar
                Name="BottomTick"
                SnapsToDevicePixels="True"
                Grid.Column="2"
                Fill="{TemplateBinding Foreground}"
                Placement="Right"
                Width="4"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="34" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="TabControl">
        <Style.Resources>
            <Style TargetType="TabItem">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource ForeBrush}"></Setter>
                <Setter Property="FontSize" Value="{DynamicResource Paragraph}"></Setter>
                <Setter Property="FontWeight" Value="{DynamicResource ParagraphWeight}"></Setter>
                <Setter Property="FontFamily" Value="{DynamicResource AppFont}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid Margin="{DynamicResource RightBottomPadding}">
                                <Border CornerRadius="{DynamicResource Radius}" Padding="{DynamicResource Padding}"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter Content="{TemplateBinding Header}" />
                                </Border>

                            </Grid>
                        </ControlTemplate>


                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Background" Value="Transparent"></Setter>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SecondBrush}"></Setter>
                        <Setter Property="Foreground" Value="{DynamicResource DarkenForeBrush}"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Padding" Value="0"></Setter>

    </Style>


    <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF" />
    <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060" />
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0" />
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="1"
                            Background="{StaticResource ScrollBar.Static.Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border"
                                    Value="{StaticResource ScrollBar.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{StaticResource ScrollBar.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border"
                                    Value="{StaticResource ScrollBar.Pressed.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{StaticResource ScrollBar.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                            <Setter Property="Background" TargetName="border"
                                    Value="{StaticResource ScrollBar.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{StaticResource ScrollBar.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="{DynamicResource ForeColor}" Opacity="0.3" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="{DynamicResource ForeColor}" Opacity="0.2" />
    <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="{DynamicResource ForeColor}" Opacity="0.4" />
    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="barborder" Background="{StaticResource ScrollBar.Static.Thumb}" Padding="5" CornerRadius="5">
                        <Rectangle
                                   Height="{TemplateBinding Height}" SnapsToDevicePixels="True"
                                   Width="{TemplateBinding Width}" />    
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="barborder"
                                    Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="barborder"
                                    Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}"
                               Height="{TemplateBinding Height}" SnapsToDevicePixels="True"
                               Width="{TemplateBinding Width}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle"
                                    Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="rectangle"
                                    Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition
                                MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Grid.Row="1" />
                        <RepeatButton Visibility="Collapsed" x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Height="0"
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowTop"
                                  
                                  Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                  Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}"
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Visibility="Collapsed" x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
                                      Height="0"
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowBottom"
                                  
                                  Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                  Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition
                                        MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" Grid.Column="1" />
                                <RepeatButton x:Name="PART_LineLeftButton"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowLeft"
                                          Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                          Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowRight"
                                          Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                          Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{DynamicResource BackBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{DynamicResource BackBrush}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Name="viewer" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Grid.Row="1" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}" Grid.Column="0"
                                                Margin="{TemplateBinding Padding}" Grid.Row="0" />
                        <ScrollBar Style="{StaticResource ScrollBarStyle1}" x:Name="PART_VerticalScrollBar"
                                   AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                        <ScrollBar Style="{StaticResource ScrollBarStyle1}" x:Name="PART_HorizontalScrollBar"
                                   AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow"
                                   Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0"
                                   Orientation="Horizontal" Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>